const jwt = require("jsonwebtoken");

const User = require("../models/user.js");

const jwtSecretKey = "myjwtsecretkey";

const authMiddleware = async (req, res, next) => {
  //check1: verify if the token is present in request headters
  const token = req.headers.authorization;
  if (!token) {
    return res.status(400).json({
      success: false,
      messsge: "token is required in headter",
    });
  }

  // check2: Check if the jwt is generated by or web app
  try {
    jwt.verify(token, jwtSecretKey);
  } catch (err) {
    return res.status(400).json({
      success: false,
      message: "Invalid token",
    });
  }

  //check3: Check the expiry of the token
  const decodedToken = jwt.decode(token);
  const now = Math.floor(Date.now() / 1000);
  if (now > decodedToken.exp) {
    return res.status(400).json({
      success: false,
      message: "Token expired, please re login",
    });
  }

  //chech4: Get the user from DB and match the token
  const user = await User.findById(decodedToken.id);
  if (user.token !== token) {
    return res.status(400).json({
      success: false,
      message: "Ivalid JWT",
    });
  }
  req.user = user;
  next();
};

module.exports = authMiddleware;
